Program:
    match=Match
;

Match:
    'match' '(' type=MatchType expr=ID ')' '{'
        cases*=Case
    '}'
;

Case:
    'case' pat=Pattern block=Block
;

Pattern:
    ('[' pats*=Pattern[','] ']') | expr=Expression
;

Expression: Value | (Cmp Value) | (Op Value Cmp Value) | '_';

Value: ID | NUMBER;

Cmp: '<=' | '>=' | '>' | '<';

Op: '+' | '-' | '*' | '/';

MatchType: ID | ID '*';

Block: '{' /.*/ '}';
